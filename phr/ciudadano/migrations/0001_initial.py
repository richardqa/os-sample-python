# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2017-01-05 17:44
from __future__ import unicode_literals

import uuid

import django.core.validators
import django.db.models.deletion
import multiselectfield.db.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ubigeo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Ciudadano',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True)),
                ('uid', models.UUIDField(default=uuid.uuid4, editable=False)),
                ('es_removido', models.BooleanField(default=False, editable=False)),
                ('uuid', models.UUIDField(default=uuid.uuid4)),
                ('nombres', models.CharField(blank=True, max_length=100, null=True, verbose_name='Nombres')),
                ('apellido_paterno', models.CharField(blank=True, max_length=100, null=True, verbose_name='Apellido paterno')),
                ('apellido_materno', models.CharField(blank=True, max_length=100, null=True, verbose_name='Apellido materno')),
                ('tipo_documento', models.CharField(blank=True, choices=[('00', 'NO SE CONOCE'), ('01', 'DNI/LE'), ('02', 'LM/BO'), ('03', 'CARNET DE EXTRAJERIA'), ('04', 'ACTA DE NACIMIENTO'), ('06', 'PASAPORTE'), ('07', 'DI DEL EXTRANJERO')], max_length=5, null=True, verbose_name='Tipo de documento')),
                ('tipo_documento_minsa', models.CharField(blank=True, choices=[('0', 'No tiene'), ('1', 'DNI'), ('2', 'Carné de extranjería'), ('3', 'Pasaporte'), ('4', 'Documento de identidad extranjero')], max_length=5, null=True, verbose_name='Tipo de documento')),
                ('numero_documento', models.CharField(blank=True, max_length=10, null=True, verbose_name='Número de documento')),
                ('correo', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Correo')),
                ('telefono', models.CharField(blank=True, max_length=10, null=True, verbose_name='Teléfono')),
                ('celular', models.CharField(blank=True, max_length=10, null=True, verbose_name='Celular')),
                ('domicilio_direccion', models.CharField(blank=True, max_length=60, null=True, verbose_name='Domicilio Direccion')),
                ('domicilio_referencia', models.CharField(blank=True, max_length=60, null=True, verbose_name='Domicilio Referencia')),
                ('nacimiento_ubigeo',
                 models.CharField(blank=True, max_length=10, null=True, verbose_name='Nacimiento Ubigeo')),
                ('sexo', models.CharField(blank=True, choices=[('01', 'Masculino'), ('02', 'Femenino')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Sexo Nacido')),
                ('estado_civil', models.CharField(blank=True, choices=[('S', 'Soltero(a)'), ('CO', 'Conviviente'),
                                                                       ('C', 'Casado(a)'), ('D', 'Divorciado(a)'),
                                                                       ('V', 'Viudo(a)')], max_length=10, null=True,
                                                  verbose_name='Estado civil')),
                ('etnia', models.CharField(choices=[('01', 'AYMARA'), ('02', 'URO'), ('03', 'JAQARU, KAWI (JAQI, CAUQUI)'), ('04', 'CHANCAS'), ('05', 'CHOPCCAS'), ('06', "Q'EROS"), ('07', 'WANCAS'), ('08', 'OTROS GRUPOS QUECHUAS DEL AREA ANDINA (II)'), ('09', 'ACHUAR, ACHUAL'), ('10', 'AMAHUACA'), ('11', 'AMAIWERI • KISAMBAERI'), ('12', 'AMARA KAERI'), ('13', 'ANDOA - SHIMIGAE'), ('14', 'ANDOKE'), ('15', 'ARABELLA (CHIRUPINO)'), ('16', 'ARASAIRE'), ('17', 'ASHANINKA'), ('18', 'ASHENINKA'), ('19', 'AWAJUN (AGUARUNA, AENTS)'), ('20', 'BORA (MIAMUNA)'), ('21', 'CACATAIBO (UNI)'), ('22', 'CAHUARANA (MOROCANO)'), ('23', 'CANDOSHI - MURATO'), ('24', 'CAPANAHUA (JUNIKUIN)'), ('25', 'CAQUINTE (POYENISATI)'), ('26', 'CASHINAHUA (JUNIKUIN)'), ('27', 'CHAMICURO (CHAMEKOLO)'), ('28', 'CHITONAHUA'), ('29', 'COCAMA - COCAMILLA'), ('30', 'CUJARE—O (I—APARI)'), ('31', 'CULINA (MADIJA)'), ('32', 'ESE´EJA ("HUARAYO")'), ('33', 'HARAKMBUT'), ('34', 'HUACHIPAIRE'), ('35', 'HUAORANI (TAGAERI, TAROMENANE)'), ('36', 'HUITOTO (INCLUYE MURUI, MENECA, MUNAINE)'), ('37', 'IQUITO'), ('38', 'ISCONAHUA (ICOBAKEBO)'), ('39', 'JEBERO (SHIWIIU, SEWELO)'), ('40', 'JIBARO'), ('41', 'LAMISTO'), ('42', 'MACHIGUENGA (MATSIGENKA)'), ('43', 'MASHCO - PIRO ("MASHCO")'), ('44', 'MASTANAHUA'), ('45', 'MAYORUNA (MATS...)'), ('46', 'MURUNAHUA'), ('47', 'NANTI'), ('48', 'NOMATSIGUENGA'), ('49', 'OCAINA (IVOT´SA)'), ('50', 'OMAGUA'), ('51', 'OREJON (MAI HUNA, MAIJUNA)'), ('52', 'PISABO (MAYO, KANIBO)'), ('53', 'PUKIRIERI'), ('54', 'QUICHUA - QUICHUA RUNA, KICHWA (I)'), ('55', 'RESIGARO'), ('56', 'SAPITERI'), ('57', 'SECOYA (AIDO PAI)'), ('58', 'CHAPRA'), ('59', 'SHARANAHUA / MARINAHUA (ONIKOIN)'), ('60', 'SHAWI (CHAYAHUITA, KANPUNAN, KAMPU PIYAWI)'), ('61', 'SHIPIBO - CONIBO - SHETEBO'), ('62', 'SHUAR'), ('63', 'TAUSHIRO (PINCHE)'), ('64', 'TICUNA (DU<X<GU)'), ('65', 'TOYOERI'), ('66', 'URARINA (ITUKALE, SHIMACO, KACH¡)'), ('67', 'WAMPIS (HUAMBISA)'), ('68', 'YAGUA (YAWA, NIHAMWO)'), ('69', 'YAMINAHUA'), ('70', 'YANESHA ("AMUESHA")'), ('71', 'YINE • YAMI ("PIRO")'), ('72', 'YORA ("NAHUA", "PARQUENAHUA")'), ('73', 'OTROS GRUPOS INDIGENAS AMAZONICOS'), ('80', 'MESTIZO'), ('81', 'AFRO DESCENDIENTE'), ('82', 'ASIATICO DESCENDIENTE'), ('83', 'OTRO')], default='80', max_length=2, null=True, verbose_name='Etnia')),
                ('lengua', models.CharField(blank=True, choices=[('CASTELLANO', 'Castellano'), ('QUECHUA', 'Quechua'),
                                                                 ('AYMARA', 'Aymara'),
                                                                 ('AMAZONICA', 'Nativo amazónico'), ('OTRO', 'Otro')],
                                            max_length=10, null=True, verbose_name='Lengua')),
                ('tipo_seguro', models.PositiveIntegerField(blank=True, choices=[(1, 'SIS'), (2, 'ESSALUD'),
                                                                                 (3, 'Sanidad FFAA/PNP'),
                                                                                 (4, 'Privado'), (6, 'Ninguno')],
                                                            null=True, verbose_name='Tipo de seguro')),
                ('estado', models.CharField(blank=True, choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo'),
                                                                 ('PENDIENTE', 'Pendiente')], default='PENDIENTE',
                                            max_length=20, null=True, verbose_name='Estado')),
                ('continente_domicilio',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='ciudadano_ciudadano_continente_domicilio',
                                   to='ubigeo.UbigeoContinente')),
                ('departamento_domicilio',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='ciudadano_ciudadano_departamento_domicilio',
                                   to='ubigeo.UbigeoDepartamento')),
                ('departamento_nacimiento',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='ciudadano_ciudadano_departamento_nacimiento',
                                   to='ubigeo.UbigeoDepartamento')),
                ('distrito_domicilio',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='ciudadano_ciudadano_distrito_domicilio', to='ubigeo.UbigeoDistrito')),
                ('distrito_nacimiento',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='ciudadano_ciudadano_distrito_nacimiento',
                                   to='ubigeo.UbigeoDistrito')),
                ('localidad_domicilio',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='ciudadano_ciudadano_localidad_domicilio',
                                   to='ubigeo.UbigeoLocalidad')),
                ('pais_domicilio',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='ciudadano_ciudadano_pais_domicilio', to='ubigeo.UbigeoPais')),
                ('provincia_domicilio',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='ciudadano_ciudadano_provincia_domicilio',
                                   to='ubigeo.UbigeoProvincia')),
                ('provincia_nacimiento',
                 models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE,
                                   related_name='ciudadano_ciudadano_provincia_nacimiento',
                                   to='ubigeo.UbigeoProvincia')),
            ],
            options={
                'verbose_name': '1. Ciudadano',
                'verbose_name_plural': '1. Ciudadanos',
            },
        ),
        migrations.CreateModel(
            name='CiudadanoPaciente',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('apellido_de_casada', models.CharField(max_length=100, verbose_name='Apellido de casada')),
                ('fecha_expedicion', models.DateField(null=True, verbose_name='Fecha de Expedición')),
                ('contacto_nombres',
                 models.CharField(blank=True, max_length=100, null=True, verbose_name='Contacto nombres')),
                ('contacto_apellido_paterno',
                 models.CharField(blank=True, max_length=100, null=True, verbose_name='Contacto apellido paterno')),
                ('contacto_apellido_materno',
                 models.CharField(blank=True, max_length=100, null=True, verbose_name='Contacto apellido materno')),
                ('contacto_tipo_documento',
                 models.CharField(blank=True, max_length=5, null=True, verbose_name='Contacto tipo de documento')),
                ('contacto_numero_documento',
                 models.CharField(blank=True, max_length=10, null=True, verbose_name='Contacto número de documento')),
                ('contacto_email',
                 models.EmailField(blank=True, max_length=254, null=True, verbose_name='Contacto correo')),
                ('contacto_telefono',
                 models.CharField(blank=True, max_length=10, null=True, verbose_name='Contacto teléfono')),
                ('contacto_celular',
                 models.CharField(blank=True, max_length=10, null=True, verbose_name='Contacto celular')),
                ('ciudadano', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE,
                                                related_name='ciudadano_ciudadanopaciente_ciudadano',
                                                to='ciudadano.Ciudadano')),
            ],
        ),
        migrations.CreateModel(
            name='CiudadanoRN',
            fields=[
                ('fecha_creacion', models.DateTimeField(auto_now_add=True, null=True)),
                ('fecha_modificacion', models.DateTimeField(auto_now=True, null=True)),
                ('es_removido', models.BooleanField(default=False, editable=False)),
                ('cui', models.CharField(max_length=10, primary_key=True, serialize=False, verbose_name='N° CUI')),
                ('codigo_renaes', models.CharField(blank=True, max_length=8, null=True, verbose_name='Código Renaes')),
                ('hci', models.CharField(blank=True, max_length=20, null=True)),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='Fecha de nacimiento')),
                ('hora_nacimiento', models.TimeField(blank=True, null=True, verbose_name='Hora de nacimiento')),
                ('sexo_nacido', models.CharField(blank=True, choices=[('01', 'Masculino'), ('02', 'Femenino')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Sexo Nacido')),
                ('nombre_nacido', models.CharField(blank=True, max_length=250, null=True, verbose_name='Nombre RN')),
                ('peso_nacido', models.PositiveIntegerField(blank=True, null=True,
                                                            validators=[django.core.validators.MinValueValidator(300),
                                                                        django.core.validators.MaxValueValidator(
                                                                            5000)], verbose_name='Peso Nacido')),
                ('talla_nacido', models.PositiveIntegerField(blank=True, null=True,
                                                             validators=[django.core.validators.MinValueValidator(30),
                                                                         django.core.validators.MaxValueValidator(
                                                                             60)])),
                ('numero_temperatura', models.PositiveSmallIntegerField(blank=True, null=True, validators=[
                    django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{1,2}$'),
                    django.core.validators.MinValueValidator(30, django.core.validators.MaxValueValidator(50))])),
                ('resultado_examen_fisico', models.CharField(blank=True, choices=[('01', 'Normal'), ('02', 'Patologico')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')])),
                ('edad_examen_fisico', models.CharField(blank=True, max_length=2, null=True)),
                ('unida_medida_edad',
                 models.CharField(blank=True, choices=[('01', 'Horas'), ('02', 'Dias')], max_length=2, null=True)),
                ('numero_nacido_perim_cefalico',
                 models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True,
                                     validators=[django.core.validators.MinValueValidator(20),
                                                 django.core.validators.MaxValueValidator(50)])),
                ('numero_nacido_perim_toracico',
                 models.DecimalField(blank=True, decimal_places=2, max_digits=4, null=True,
                                     validators=[django.core.validators.MinValueValidator(20),
                                                 django.core.validators.MaxValueValidator(50)])),
                ('apgar_uno_nacido', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Apgar 1')),
                ('apgar_cinco_nacido', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(10)], verbose_name='Apgar 5')),
                ('peso_edad_gestacional', models.CharField(blank=True, choices=[('01', 'Adecuado'), ('02', 'Pequeño'), ('03', 'Grande')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')])),
                ('reanimacion_respiratoria', models.CharField(blank=True, choices=[('00', 'No'), ('01', 'Oxigeno'), ('02', 'Bolsa y Mascara'), ('03', 'Avanzado')], default='00', max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')])),
                ('es_medicacion_reanimacion', models.BooleanField(default=False)),
                ('es_hospitalizacion', models.BooleanField(default=False, verbose_name='Es Hospitalización')),
                ('es_profilaxis_ocular', models.BooleanField(default=False, verbose_name='Es Profilaxis Ocular')),
                ('es_vitamina_k', models.BooleanField(default=False, verbose_name='Es Vitamina K')),
                ('es_contacto_piel_a_piel', models.NullBooleanField(default=None, verbose_name='Es Contacto Piel a Piel')),
                ('es_alojamiento_conjunto', models.NullBooleanField(default=None, verbose_name='Es Alojamiento Conjunto')),
                ('deposiciones', models.CharField(blank=True, choices=[('01', 'Meconial'), ('02', 'Transaccional'), ('03', 'Amarilla')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Deposiciones')),
                ('es_icteria_precoz', models.BooleanField(default=False, verbose_name='Es Icteria Precoz')),
                ('alimentacion', models.CharField(blank=True, choices=[('01', 'Lactancia materna exclusiva'), ('02', 'Mixta'), ('03', 'Artificial')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='alimentacion')),
                ('grupo_sanguineo', models.CharField(blank=True, choices=[('01', 'O'), ('02', 'A'), ('03', 'B'), ('04', 'AB')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Grupo Sanguineo')),
                ('factor_rh',
                 models.CharField(blank=True, choices=[('01', '+'), ('02', '-'), ('03', 'No se hizo')], max_length=2,
                                  null=True, verbose_name='Factor RH')),
                ('es_tsh', models.NullBooleanField(default=None, verbose_name='Es TSH')),
                ('vdrl_rpr',
                 models.CharField(blank=True, choices=[('01', '+'), ('02', '-'), ('03', 'No se hizo')], max_length=2,
                                  null=True, verbose_name='VDRL / RPR')),
                ('signos_sintomas_parto', multiselectfield.db.fields.MultiSelectField(blank=True,
                                                                                      choices=[('01', 'Anasarca'),
                                                                                               ('02', 'Cianosis'),
                                                                                               ('03', 'Escotomas'),
                                                                                               ('04', 'Hematuria'), (
                                                                                               '05',
                                                                                               'Hipertensión ortostática'),
                                                                                               ('06', 'Ictericia'),
                                                                                               ('07', 'Petequias'),
                                                                                               ('08', 'Proteinuria'), (
                                                                                               '09',
                                                                                               'Dolor en hipocondrio derecho')],
                                                                                      max_length=26, null=True)),
                ('corticoides_antenatales', multiselectfield.db.fields.MultiSelectField(blank=True,
                                                                                        choices=[('01', 'No recibe'),
                                                                                                 ('02', 'Completo'),
                                                                                                 ('03', 'Incompleto')],
                                                                                        max_length=8, null=True)),
                ('corticoides_semanas_inicio', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(28), django.core.validators.MaxValueValidator(34)], verbose_name='Semanas Inicio')),
                ('fecha_terminacion_parto', models.DateField(blank=True, null=True, verbose_name='Fecha Terminación Parto')),
                ('terminacion_parto', models.CharField(blank=True, choices=[('00', 'No se conoce'), ('01', 'Espontaneo'), ('02', 'Instrumentado'), ('03', 'Cesaria'), ('04', 'Otro')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Terminación')),
                ('indicacion_cie', models.CharField(blank=True, max_length=10, null=True, verbose_name='Indicación')),
                ('tipo_parto', models.CharField(blank=True, choices=[('01', 'Unico'), ('02', 'Doble'), ('03', 'Triple'), ('04', 'Mas de tres')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Alumbramiento')),
                ('posicion_parto', models.CharField(blank=True, choices=[('01', 'Horizontal'), ('02', 'Vertical'), ('03', 'No Aplica')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Posición Parto')),
                ('es_partograma', models.BooleanField(default=False, verbose_name='Es Partograma')),
                ('es_acompaniante_parto', models.BooleanField(default=False, verbose_name='Es Parto Acompañante')),
                ('condicion_parto', models.CharField(blank=True, choices=[('00', 'No se conoce'), ('01', 'Espontaneo'), ('02', 'Instrumentado'), ('03', 'Cesaria'), ('04', 'Otro')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Condición')),
                ('atiende_parto', models.CharField(blank=True, choices=[('00', 'NO SE CONOCE'), ('01', 'MEDICO'), ('02', 'OBSTETRA'), ('03', 'ENFERMERA (O)'), ('04', 'INTERNA (O)'), ('05', 'TECNICO SALUD'), ('06', 'PROMOTOR SALUD'), ('07', 'PARTERA / COMADRONA'), ('08', 'FAMILIAR'), ('09', 'OTRO'), ('10', 'NADIE (AUTOAYUDA)')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Responsable Atención')),
                ('financiador_parto', models.CharField(blank=True, choices=[('00', 'No se conoce'), ('01', 'Usuario'), ('02', 'SIS'), ('03', 'Essalud'), ('04', 'Soat'), ('05', 'Sanidad FAP'), ('06', 'Sanidad Naval'), ('07', 'Sanidad EP'), ('08', 'Sanidad PNP'), ('09', 'Privados'), ('10', 'Otros'), ('11', 'Exonerados')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Financiador Parto')),
                ('duracion_semanas_parto', models.PositiveSmallIntegerField(blank=True, null=True, validators=[
                    django.core.validators.MinValueValidator(22), django.core.validators.MaxValueValidator(48)],
                                                                            verbose_name='Edad gestacional')),
                ('duracion_parto', models.CharField(blank=True, choices=[('01', 'Normal'), ('02', 'Prolongado'), ('03', 'Precipitado')], max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Duración')),
                ('muerte_intrauterina', models.CharField(blank=True, choices=[('01', 'No hubo'), ('02', 'Durante Embarazo'), ('03', 'Durante Parto'), ('04', 'Momento Desconocido')], default='01', max_length=2, null=True, validators=[django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')], verbose_name='Muerte intrauterina')),
                ('es_episiotomia_parto',
                 models.CharField(blank=True, choices=[('01', 'Sí'), ('02', 'No'), ('04', 'No aplica')], max_length=2,
                                  null=True, verbose_name='Es Episiotomía')),
                ('desgarro_parto',
                 models.CharField(blank=True, choices=[('00', 'No hubo'), ('01', 'I'), ('02', 'II'), ('03', 'III/IV')],
                                  max_length=2, null=True, verbose_name='Desgarro')),
                ('alumbramiento_parto', models.CharField(blank=True, max_length=2, null=True)),
                ('placenta_parto',
                 models.CharField(blank=True, choices=[('01', 'Completa'), ('02', 'Incompleta'), ('03', 'Retenida')],
                                  max_length=2, null=True, validators=[
                         django.core.validators.RegexValidator(message='Numero de 2 digitos', regex='^[0-9]{2}$')])),
                ('fecha_egreso', models.DateField(blank=True, null=True, verbose_name='Fecha de Egreso')),
                ('tipo_egreso', models.CharField(blank=True,
                                                 choices=[('01', 'Sano'), ('02', 'Translado'), ('03', 'Con Patología'),
                                                          ('04', 'Fallecido')], max_length=35, null=True,
                                                 verbose_name='Tipo Egreso')),
                ('establecimiento_traslado', models.CharField(blank=True, max_length=12, null=True)),
                ('patologia_cie', models.CharField(blank=True, max_length=10, null=True, verbose_name='Patología')),
                ('es_necropsia', models.BooleanField(default=False, verbose_name='Es Necropsia')),
                ('es_eess_procedencia', models.BooleanField(default=False)),
                ('eess_procedencia', models.CharField(blank=True, max_length=20, null=True)),
                ('codigo_local', models.CharField(blank=True, max_length=8, null=True)),
                ('tipo_doc_madre', models.CharField(blank=True,
                                                    choices=[('00', 'NO SE CONOCE'), ('01', 'DNI/LE'), ('02', 'LM/BO'),
                                                             ('03', 'CARNET DE EXTRAJERIA'),
                                                             ('04', 'ACTA DE NACIMIENTO'), ('06', 'PASAPORTE'),
                                                             ('07', 'DI DEL EXTRANJERO')], max_length=2, null=True)),
                ('numero_doc_madre', models.CharField(blank=True, max_length=35, null=True)),
                ('primer_apellido_madre', models.CharField(blank=True, max_length=40, null=True)),
                ('segundo_apellido_madre', models.CharField(blank=True, max_length=40, null=True)),
                ('prenombres_madre', models.CharField(blank=True, max_length=60, null=True)),
                ('es_ficha_activa', models.BooleanField(default=True)),
                ('ciudadano',
                 models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='ciudadano.Ciudadano')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
